{"ast":null,"code":"var _jsxFileName = \"/Users/alexcholmsky/projects/side-projects/merntodo/client/src/App.js\",\n    _s = $RefreshSig$();\n\n// issue with submitting blank todo field\nimport Preloader from \"./components/preloader\";\nimport { readTodos, createTodo } from \"./functions\";\nimport { useEffect, useState } from \"react\"; // import { createTodo } from \"../../server/controller/todo\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [todo, setTodo] = useState({\n    title: '',\n    content: ''\n  });\n  const [todos, setTodos] = useState(null);\n  const [currentId, setCurrentId] = useState(0);\n  useEffect(() => {\n    let currentTodo = currentId != 0 ? todos.find(todo => todo._id === currentId) : {\n      title: '',\n      content: ''\n    };\n    setTodo(currentTodo);\n  }, [currentId]);\n  /* \n  with useState, you pass the initial value \n  of the state variable as an argument\n   useState returns an array, where \n  the first element is the state variable (todo) \n  and the second element is a setter function to update the value of the variable (setTodo)\n   - this function takes a value from an input field to update the state\n   - onChange function should create a new object each time the state is changed\n   link: https://blog.logrocket.com/a-guide-to-usestate-in-react-ecb9952e406c/\n  */\n  //gets todos from database and displays them to the front-end\n\n  useEffect(() => {\n    console.log('todos');\n\n    const fetchData = async () => {\n      const result = await readTodos();\n      setTodos(result);\n    };\n\n    fetchData();\n  }, []); //resets inputs\n\n  const clear = () => {\n    setCurrentId(0);\n    setTodo({\n      title: '',\n      content: ''\n    });\n    console.log('clear');\n  }; //resetting input when you press the esc key\n\n\n  useEffect(() => {\n    const clearField = e => {\n      if (e.key === '27') {\n        clear();\n      }\n    };\n\n    window.addEventListener('keydown', clearField);\n    return () => window.removeEventListener('keydown', clearField);\n  }, []);\n  /*\n  note that the aync prefix allows a function to \n  have the await keyword inside it\n  - async functions always return a promise\n  */\n  //stops the page from refreshing when the user presses submit, and displays all todos after submit\n\n  const onSubmitHandler = async e => {\n    e.preventDefault(); //creates todo\n\n    const result = await createTodo(todo);\n    setTodos([...todos, result]);\n  };\n  /*event handler attached to the form submission event <form onSubmit={onSubmit}>. \n  React invokes onSubmit() handler when the form is submitted, \n  i.e. the user clicks Submit button.\n  */\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(todo)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"col s12\",\n        onSubmit: onSubmitHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-field col s6\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"material-icons  prefix\",\n              children: \"account_circle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"title_input\",\n              type: \"text\",\n              className: \"validate\",\n              value: todo.title,\n              onChange: e => setTodo({ ...todo,\n                title: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"icon_prefix\",\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-field col s6\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"material-icons prefix\",\n              children: \"description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"content-input\",\n              children: \"content\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"content_input\",\n              type: \"text\",\n              className: \"validate\",\n              value: todo.content,\n              onChange: e => setTodo({ ...todo,\n                content: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row right-align\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"waves-effect.waves-light btn\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), !todos ? /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 22\n      }, this) : todos.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"collection\",\n        children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => setCurrentId(todo._id),\n          className: \"collection-item\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: todo.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [todo.content, /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"#!\",\n                className: \"secondary-content\",\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"material-icons\",\n                  children: \"delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 36\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 17\n          }, this)\n        }, todo._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \" nothing in do \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"pKXMYoSedJwd2LZRvzbrokPNeuE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/alexcholmsky/projects/side-projects/merntodo/client/src/App.js"],"names":["Preloader","readTodos","createTodo","useEffect","useState","App","todo","setTodo","title","content","todos","setTodos","currentId","setCurrentId","currentTodo","find","_id","console","log","fetchData","result","clear","clearField","e","key","window","addEventListener","removeEventListener","onSubmitHandler","preventDefault","JSON","stringify","target","value","length","map"],"mappings":"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","sourcesContent":["// issue with submitting blank todo field\nimport Preloader from \"./components/preloader\";\nimport {readTodos, createTodo} from \"./functions\";\nimport { useEffect, useState } from \"react\";\n// import { createTodo } from \"../../server/controller/todo\";\n\nfunction App() {\n\n  const [todo, setTodo] = useState({title: '', \n  content: ''})\n\n  const [todos, setTodos] = useState(null);\n  const [currentId, setCurrentId] = useState(0);\n  useEffect(() => {\n    let currentTodo = currentId!=0? todos.find(todo => \n      todo._id===currentId):{title: '', content: ''}\n      setTodo(currentTodo); \n  }, [currentId])\n  /* \n  with useState, you pass the initial value \n  of the state variable as an argument\n\n  useState returns an array, where \n  the first element is the state variable (todo) \n  and the second element is a setter function to update the value of the variable (setTodo)\n   - this function takes a value from an input field to update the state\n   - onChange function should create a new object each time the state is changed\n   link: https://blog.logrocket.com/a-guide-to-usestate-in-react-ecb9952e406c/\n  */\n\n  //gets todos from database and displays them to the front-end\n  useEffect(() => {\n      console.log('todos');\n    const fetchData = async () => {\n      const result = await readTodos();\n      setTodos(result)\n      }\n    fetchData()\n  }, [])\n\n  //resets inputs\n  const clear = ()=>{\n    setCurrentId(0);\n    setTodo({title:'',content:''})\n    console.log('clear')\n    };\n\n    //resetting input when you press the esc key\n  useEffect(() => {\n    const clearField = (e) => {\n    if(e.key === '27'){\n      clear(); \n      }\n    }\n    \n    window.addEventListener('keydown', clearField)\n      return () => window.removeEventListener('keydown', clearField)\n      }, [])\n      \n/*\nnote that the aync prefix allows a function to \nhave the await keyword inside it\n- async functions always return a promise\n*/\n  \n\n  //stops the page from refreshing when the user presses submit, and displays all todos after submit\n  const onSubmitHandler = async(e)=>{\n    e.preventDefault(); \n\n    //creates todo\n    const result = await createTodo(todo)\n    setTodos([...todos, result])\n\n  }\n\n  /*event handler attached to the form submission event <form onSubmit={onSubmit}>. \n  React invokes onSubmit() handler when the form is submitted, \n  i.e. the user clicks Submit button.\n  */\n  \n\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <pre>{JSON.stringify(todo) }</pre>\n        {/* the pre tag is esentially used for testing purposes, to displau iser input*/}\n        <form className=\"col s12\" onSubmit={onSubmitHandler}>\n          <div className=\"row\">\n            <div className=\"input-field col s6\">\n              <i className=\"material-icons \n              prefix\">account_circle</i>\n                <input id=\"title_input\" type=\"text\" \n                className=\"validate\"\n                value={todo.title}\n                onChange={e=>setTodo({...todo, \n                  title: e.target.value})}\n                />\n                  {/*... is the spread operator, which expands an iterable(such as an obj.) into its elements\n              <input id=\"content_input\" type=\"text\" \n              className=\"val\"\n              onChange={e=>setTodo({...todo, \n                content: e.target.value})}\n                />\n                */}\n              <label htmlFor=\"icon_prefix\">Title</label>\n            </div>\n              <div className=\"input-field col s6\">\n              <i className=\"material-icons prefix\">description</i>\n              <label htmlFor=\"content-input\">content</label>\n                <input id=\"content_input\" type=\"text\" \n                  className=\"validate\"\n                  value={todo.content}\n                  onChange={e=>setTodo({...todo, \n                    content: e.target.value})}\n                />\n            </div>\n          </div>\n          <div className=\"row right-align\">\n              <button className =\"waves-effect.waves-light btn\"> \n                Submit\n              </button>\n          </div>\n        </form>\n          { \n            (!todos? <Preloader /> : todos.length > 0 ? \n            <ul className=\"collection\">\n            {todos.map(todo=> (    \n              <li key={todo._id} \n              onClick={()=>setCurrentId(todo._id)}\n              className=\"collection-item\">\n                <div>\n                <h5>{todo.title}</h5>\n                  <p>{todo.content}<a href=\"#!\" \n                    className=\"secondary-content\">\n                    <i className=\"material-icons\">delete\n            </i></a></p></div></li>))}\n            </ul>\n            :<div><h5> nothing in do </h5></div>)}\n           {/* this is the conditional operator (ternary)\n          //   - takes a condition to evaluate \n          //   - followed by a ?\n          //   - then an expression to execute if the condition is truthy\n          //   - a colon : to seperate the two expressions \n          //   - finally expression if the condition is false \n          //   essentially an if else statement\n          //   */}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}