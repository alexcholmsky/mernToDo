{"ast":null,"code":"var _jsxFileName = \"/Users/alexcholmsky/projects/side-projects/merntodo/client/src/App.js\",\n    _s = $RefreshSig$();\n\n// issue with submitting blank todo field\nimport Preloader from \"./components/preloader\";\nimport { readTodos, createTodo, updateTodo, deleteTodo } from \"./functions\";\nimport { useEffect, useState, useRef } from \"react\"; // import {isDeepEqual} from 'fast-deep-equal';\n// import {  } from \"../../server/controller/todo\";\n// import { createTodo } from \"../../server/controller/todo\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [todo, setTodo] = useState({\n    title: '',\n    content: ''\n  });\n  const [todos, setTodos] = useState(null);\n  const [currentId, setCurrentId] = useState(0);\n  const prevTodo = useRef(todo);\n  const prevTodos = useRef(todos);\n  /*below are a series of hooks. hooks let us abstract functional components (functions that take properties and return jsx)\n  - useEffect encaps. code that has side effects:\n      - accepts 2 arguments, no return\n      - first par. is function that holds the code you want to run \n      - second tells react when you want the hook to be called \n        - if not specified, function will be called on mount and every rendered update.\n      - this second par. is an array of dependencies, and if any of these dependencies have changed since last render, it runs the function\n  */\n\n  useEffect(() => {\n    let currentTodo = currentId !== 0 ? todos.find(todo => todo._id === currentId) : {\n      title: '',\n      content: ''\n    };\n\n    if (JSON.stringify(prevTodo) === JSON.stringify(todo) && JSON.stringify(prevTodos) === JSON.stringify(todos)) {\n      setTodo(currentTodo);\n      console.log('set todos');\n    }\n  }, [currentId, todo, todos]);\n  /* \n  with useState, you pass the initial value \n  of the state variable as an argument\n   useState returns an array, where \n  the first element is the state variable (todo) \n  and the second element is a setter function to update the value of the variable (setTodo)\n   - this function takes a value from an input field to update the state\n   - onChange function should create a new object each time the state is changed\n   link: https://blog.logrocket.com/a-guide-to-usestate-in-react-ecb9952e406c/\n  */\n  //gets todos from database and displays them to the front-end\n\n  useEffect(() => {\n    console.log('displaying todos');\n\n    const fetchData = async () => {\n      const result = await readTodos();\n      setTodos(result);\n    };\n\n    fetchData();\n  }, [currentId]); //resets inputs\n\n  const clear = () => {\n    setCurrentId(0);\n    setTodo({\n      title: '',\n      content: ''\n    });\n    console.log('clear');\n  }; //resetting input when you press the esc key\n\n\n  useEffect(() => {\n    const clearField = e => {\n      if (e.keyCode === 27) {\n        clear();\n      }\n    };\n\n    window.addEventListener('keydown', clearField);\n    return () => window.removeEventListener('keydown', clearField); //used for \"clean up\" aka to unbind the event listener \n  }, []);\n  /*\n  note that the aync prefix allows a function to \n  have the await keyword inside it\n  - async functions always return a promise\n  */\n\n  /*event handler attached to the form submission event <form onSubmit={onSubmit}>. \n  React invokes onSubmit() handler when the form is submitted, \n  i.e. the user clicks Submit button.\n  */\n  //stops the page from refreshing when the user presses submit, and displays all todos after submit\n\n  const onSubmitHandler = async e => {\n    e.preventDefault(); //if we are making a new todo item \n\n    if (currentId === 0) {\n      //creates todo\n      const result = await createTodo(todo);\n      setTodos([...todos, result]);\n      clear();\n    } else //if we have selected a new todo element to update\n      {\n        await updateTodo(currentId, todo);\n        clear();\n      }\n  };\n\n  const removeTodo = async id => {\n    await deleteTodo(id);\n    const todosCopy = [...todos];\n    todosCopy.filter(todo => todo._id !== id); // const fetchData = async () => {\n    //   const result = await readTodos();\n    //   setTodos(result)\n    //   }\n    // fetchData()\n\n    fetchData();\n    console.log('post delete');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"col s12\",\n        onSubmit: onSubmitHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-field col s6\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"material-icons  prefix\",\n              children: \"account_circle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"title_input\",\n              type: \"text\",\n              className: \"validate\",\n              value: todo.title,\n              onChange: e => setTodo({ ...todo,\n                title: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"icon_prefix\",\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-field col s6\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"material-icons prefix\",\n              children: \"description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"content-input\",\n              children: \"content\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"content_input\",\n              type: \"text\",\n              className: \"validate\",\n              value: todo.content,\n              onChange: e => setTodo({ ...todo,\n                content: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row right-align\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"waves-effect.waves-light btn\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), !todos ? /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 22\n      }, this) : todos.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"collection\",\n        children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => setCurrentId(todo._id),\n          className: \"collection-item\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: todo.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [todo.content, /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"#!\",\n                onClick: () => removeTodo(todo._id),\n                className: \"secondary-content\",\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"material-icons\",\n                  children: \"delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 17\n          }, this)\n        }, todo._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \" nothing in do \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"25AQuhV1hjvIta/wMufZnSRoolo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/alexcholmsky/projects/side-projects/merntodo/client/src/App.js"],"names":["Preloader","readTodos","createTodo","updateTodo","deleteTodo","useEffect","useState","useRef","App","todo","setTodo","title","content","todos","setTodos","currentId","setCurrentId","prevTodo","prevTodos","currentTodo","find","_id","JSON","stringify","console","log","fetchData","result","clear","clearField","e","keyCode","window","addEventListener","removeEventListener","onSubmitHandler","preventDefault","removeTodo","id","todosCopy","filter","target","value","length","map"],"mappings":"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","sourcesContent":["// issue with submitting blank todo field\nimport Preloader from \"./components/preloader\";\nimport {readTodos, createTodo, updateTodo, deleteTodo} from \"./functions\";\nimport { useEffect, useState, useRef } from \"react\";\n// import {isDeepEqual} from 'fast-deep-equal';\n// import {  } from \"../../server/controller/todo\";\n// import { createTodo } from \"../../server/controller/todo\";\n\nfunction App() {\n\n  const [todo, setTodo] = useState({title: '', \n  content: ''})\n\n  const [todos, setTodos] = useState(null);\n\n  const [currentId, setCurrentId] = useState(0);\n\n  const prevTodo = useRef(todo);\n\n  const prevTodos = useRef(todos);\n\n  /*below are a series of hooks. hooks let us abstract functional components (functions that take properties and return jsx)\n  - useEffect encaps. code that has side effects:\n      - accepts 2 arguments, no return\n      - first par. is function that holds the code you want to run \n      - second tells react when you want the hook to be called \n        - if not specified, function will be called on mount and every rendered update.\n      - this second par. is an array of dependencies, and if any of these dependencies have changed since last render, it runs the function\n*/\n\n  useEffect(() => {\n    \n    let currentTodo = currentId!==0? todos.find(todo => \n      todo._id===currentId):{title: '', content: ''};\n    if ( JSON.stringify(prevTodo) === JSON.stringify(todo)  && JSON.stringify(prevTodos) === JSON.stringify(todos)) {\n      setTodo(currentTodo); \n      console.log('set todos');\n    }\n  }, [currentId, todo, todos])\n\n  /* \n  with useState, you pass the initial value \n  of the state variable as an argument\n\n  useState returns an array, where \n  the first element is the state variable (todo) \n  and the second element is a setter function to update the value of the variable (setTodo)\n   - this function takes a value from an input field to update the state\n   - onChange function should create a new object each time the state is changed\n   link: https://blog.logrocket.com/a-guide-to-usestate-in-react-ecb9952e406c/\n  */\n\n  //gets todos from database and displays them to the front-end\n  useEffect(() => {\n      console.log('displaying todos');\n    const fetchData = async () => {\n      const result = await readTodos();\n      setTodos(result)\n      }\n    fetchData()\n  }, [currentId])\n\n  //resets inputs\n  const clear = ()=>{\n    setCurrentId(0);\n    setTodo({title:'',content:''})\n    console.log('clear')\n    };\n\n    //resetting input when you press the esc key\n  useEffect(() => {\n    const clearField = (e) => {\n    if(e.keyCode === 27){\n      clear(); \n      }\n    }\n    \n    window.addEventListener('keydown', clearField)\n      return () => window.removeEventListener('keydown', clearField)\n      //used for \"clean up\" aka to unbind the event listener \n      }, [])\n      \n/*\nnote that the aync prefix allows a function to \nhave the await keyword inside it\n- async functions always return a promise\n*/\n  \n\n/*event handler attached to the form submission event <form onSubmit={onSubmit}>. \nReact invokes onSubmit() handler when the form is submitted, \ni.e. the user clicks Submit button.\n*/\n\n//stops the page from refreshing when the user presses submit, and displays all todos after submit\nconst onSubmitHandler = async(e)=>{\n  e.preventDefault();\n  //if we are making a new todo item \n  if (currentId === 0) {\n  //creates todo\n    const result = await createTodo(todo)\n    setTodos([...todos, result])\n    clear();\n    \n  }else\n  //if we have selected a new todo element to update\n  {\n    await updateTodo(currentId, todo)\n    clear();\n  }\n\n}\n\nconst removeTodo = async(id)=>{\n  await deleteTodo(id);\n  const todosCopy = [...todos];\n  todosCopy.filter(todo=>todo._id!==id);\n  // const fetchData = async () => {\n  //   const result = await readTodos();\n  //   setTodos(result)\n  //   }\n  // fetchData()\n  fetchData()\n  console.log('post delete'); \n}\n\n  \n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        {/* <pre>{JSON.stringify(todo) }</pre> */}\n        {/* the pre tag is esentially used for testing purposes, to display current todo selected*/}\n        <form className=\"col s12\" onSubmit={onSubmitHandler}>\n          <div className=\"row\">\n            <div className=\"input-field col s6\">\n              <i className=\"material-icons \n              prefix\">account_circle</i>\n                <input id=\"title_input\" type=\"text\" \n                className=\"validate\"\n                value={todo.title}\n                onChange={e=>setTodo({...todo, \n                  title: e.target.value})}\n                />\n                  {/*... is the spread operator, which expands an iterable(such as an obj.) into its elements\n              <input id=\"content_input\" type=\"text\" \n              className=\"val\"\n              onChange={e=>setTodo({...todo, \n                content: e.target.value})}\n                />\n                */}\n              <label htmlFor=\"icon_prefix\">Title</label>\n            </div>\n              <div className=\"input-field col s6\">\n              <i className=\"material-icons prefix\">description</i>\n              <label htmlFor=\"content-input\">content</label>\n                <input id=\"content_input\" type=\"text\" \n                  className=\"validate\"\n                  value={todo.content}\n                  onChange={e=>setTodo({...todo, \n                    content: e.target.value})}\n                />\n            </div>\n          </div>\n          <div className=\"row right-align\">\n              <button className =\"waves-effect.waves-light btn\"> \n                Submit\n              </button>\n          </div>\n        </form>\n          { \n            (!todos? <Preloader /> : todos.length > 0 ? \n            <ul className=\"collection\">\n            {todos.map(todo=> (    \n              <li key={todo._id} \n              onClick={()=>setCurrentId(todo._id)}\n              className=\"collection-item\">\n                <div>\n                <h5>{todo.title}</h5>\n                  <p>{todo.content}\n                  <a href=\"#!\"  \n                    onClick={()=>removeTodo(todo._id)}\n                    className=\"secondary-content\">\n                    <i className=\"material-icons\">delete\n            </i></a></p></div></li>))}\n            </ul>\n            :<div><h5> nothing in do </h5></div>)}\n           {/* this is the conditional operator (ternary)\n          //   - takes a condition to evaluate \n          //   - followed by a ?\n          //   - then an expression to execute if the condition is truthy\n          //   - a colon : to seperate the two expressions \n          //   - finally expression if the condition is false \n          //   essentially an if else statement\n          //   */}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}